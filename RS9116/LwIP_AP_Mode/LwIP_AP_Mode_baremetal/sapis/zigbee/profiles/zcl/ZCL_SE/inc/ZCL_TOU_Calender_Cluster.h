/******************************************************************************
* ZCL_TOU_Calender_Cluster.h
******************************************************************************
* Program Description:
* This file contains the DRLC cluster attribute and cmmnd information
******************************************************************************/

#ifndef _ZCL_TOU_CALENDER_CLUSTER_H_
#define _ZCL_TOU_CALENDER_CLUSTER_H_

/*-----------------------------------------------------------------------------
* Includes
*----------------------------------------------------------------------------*/


/*-----------------------------------------------------------------------------
* Global Constants
*----------------------------------------------------------------------------*/

#if ( g_TOU_CALENDER_CLUSTER_ENABLE_d == 1 )
#define g_TOU_CALENDER_CLUSTER_c                                     0x0700


#if ( g_TOU_CALENDER_SERVER_CLUSTER_ENABLE_d == 1 )
#define g_AUX_SWITCH_1_ATTRIBUTE_c                             0x0000
#define g_AUX_SWITCH_2_ATTRIBUTE_c                             0x0001
#define g_AUX_SWITCH_3_ATTRIBUTE_c                             0x0002
#define g_AUX_SWITCH_4_ATTRIBUTE_c                             0x0003
#define g_AUX_SWITCH_5_ATTRIBUTE_c                             0x0004
#define g_AUX_SWITCH_6_ATTRIBUTE_c                             0x0005
#define g_AUX_SWITCH_7_ATTRIBUTE_c                             0x0006
#define g_AUX_SWITCH_8_ATTRIBUTE_c                             0x0007

#endif         /* g_PRICE_SERVER_CLUSTER_ENABLE_d*/
/*-----------------------------------------------------------------------------
* Memory Declarations
*----------------------------------------------------------------------------*/
#if ( g_TOU_CALENDER_SERVER_CLUSTER_ENABLE_d == 1 )
extern const ZCL_Cluster_Info_t ga_TOU_Calender_Server_Cluster_Info;
#endif

#if ( g_TOU_CALENDER_CLIENT_CLUSTER_ENABLE_d == 1 )
extern const ZCL_Cluster_Info_t ga_TOU_Calender_Client_Cluster_Info;
#endif


/*-----------------------------------------------------------------------------
* Type Definitions
*----------------------------------------------------------------------------*/

/*Commands generated by Server Side of the Price Cluster*/
enum PriceClusterServerGeneratedCmds
{
	g_PublishCalenderCmd_c                = 0x00
	,g_PublishDayProfileCmd_c			  = 0x01
	,g_PublishWeekProfileCmd_c		  	  = 0x02
	,g_PublishSeasonsCmd_c			      = 0x03
	,g_PublishSpecialDaysCmd_c			  = 0x04
};
/*---------------------------------------------------------------------------*/
/*Commands received by Server Side of the Price Cluster*/
enum PriceClusterServerReceivedCmds
{
    g_GetCalenderCmd_c                  = 0x00
    ,g_GetDayProfilesCmd_c              = 0x01
	,g_GetWeekProfilesCmd_c			    = 0x03
    ,g_GetSeasonsCmd_c	 			    = 0x04
	,g_GetSpecialDays_c					= 0x05
};
/*---------------------------------------------------------------------------*/
/*Events handled by the application*/
enum PriceClusterEvents
{
    g_GetCalenderEvent_c              	  = 0x95
    ,g_GetDayProfilesEvent_c		      = 0x96
    ,g_GetWeekProfileEvent_c              = 0x97
    ,g_GetSeasonsEvent_c     	          = 0x97
    ,g_GetSpecialDaysEvent_c		      = 0x97  	
	,g_PublishCalenderEvent_c             = 0x95
    ,g_PublishDayProfileEvent_c		      = 0x96
    ,g_PublishWeekProfileEvent_c          = 0x97
    ,g_PublishSeasonsEvent_c     	      = 0x97
    ,g_PublishSpecialDaysEvent_c		  = 0x97	
};
/*---------------------------------------------------------------------------*/
typedef struct getCalenderCmd_Tag
{
    uint32_t  startTime;                 /*UTC Time - Unsigned 32 bit Integer*/
	uint8_t  numberOfCalenders;          /*Unsigned 8 bit Integer*/
	uint8_t  calenderType;				/* Unsigned 8 bit Integer*/
	uint32_t  issuerCalenderId;         /*Issuer Id - Unsigned 32 bit Integer*/
}__attribute__((__packed__))getCalenderCmd_t;
/*---------------------------------------------------------------------------*/
typedef struct getDayProfilesCmd_Tag
{
    uint32_t issuerCalender;                 /* Unsigned 32 bit Integer*/
    uint8_t  dayId;                 		/*Unsigned 8 bit Integer*/
    uint8_t  numberOfDays;                 /*Unsigned 8 bit Integer*/
}__attribute__((__packed__))getDayProfilesCmd_t;
/*---------------------------------------------------------------------------*/
typedef struct getWeekProfilesCmd_Tag
{
    uint32_t issuerCalender;                 /* Unsigned 32 bit Integer*/
    uint8_t  weekId;                 		/*Unsigned 8 bit Integer*/
    uint8_t  numberOfWeeks;                 /*Unsigned 8 bit Integer*/
}__attribute__((__packed__))getweekProfilesCmd_t;

/*---------------------------------------------------------------------------*/
typedef struct getSeasonsCmd_Tag
{
    uint32_t  issuerCalenderId;        /*Unsigned 32 bit Integer */
}__attribute__((__packed__))getSeasonsCmd_t;
/*---------------------------------------------------------------------------*/

typedef struct getSpecialDays_Tag
{
    uint32_t  startTime;                 /*UTC Time - Unsigned 32 bit Integer*/
	uint8_t  numberOfCalenders;          /*Unsigned 8 bit Integer*/
	uint8_t  calenderType;				/* Unsigned 8 bit Integer*/
	uint32_t  issuerCalenderId;         /*Issuer Id - Unsigned 32 bit Integer*/
}__attribute__((__packed__))getSpecialDays_t;

/*---------------------------------------------------------------------------*/

typedef struct publishCalenderInfo_Tag
{
    uint32_t  providerId;
    uint32_t  issuerEventId;
    uint32_t  issuerCalenderId;    /*Issuer Calender Id - Unsigned 32 bit Integer*/
    uint32_t  startTime;          /*UTC Time - Unsigned 32 bit Integer*/
	uint8_t	  calenderType;			/* Unsigned 8 bit Integer*/
	uint8_t   calenderTimeReference;
	uint8_t   calenderName[13];
	uint8_t  numberOfSeasons;          /*Unsigned 8 bit Integer*/
	uint8_t  numberOfWeekProfiles;          /*Unsigned 8 bit Integer*/
	uint8_t  numberOfDayProfiles;
}__attribute__((__packed__))publishCalenderInfo_t;
/*---------------------------------------------------------------------------*/

typedef struct rateSwitchtimers_Tag {
	uint16_t  startTime;
	uint8_t   priceTier;        /* Unsigned 8 bit Integer*/
}__attribute__((__packed__))rateSwitchtimers_t;

typedef struct freindlyCreditSwitchtimers_Tag {
	uint16_t  startTime;
	uint8_t   freindlyCreditEnable;   /* Unsigned 8 bit Integer*/
}__attribute__((__packed__))freindlyCreditSwitchtimers_t;

typedef struct auxillaryLoadSwitches_Tag {
	uint16_t  startTime;
	uint8_t   AuxillaryLoadSwitchType;  /* Unsigned 8 bit Integer*/
}__attribute__((__packed__))auxillaryLoadSwitches_t;

typedef struct dayScheduleEntries_Tag {
	rateSwitchtimers_t rateSwitchTimer ;
	freindlyCreditSwitchtimers_t  FreindlyCreditSwitch;
	auxillaryLoadSwitches_t auxillryLoadSwitch;
}__attribute__((__packed__))dayScheduleEntries_t;

typedef struct publishDayProfile_Tag
{
    uint32_t  issuerEventId;
    uint32_t  issuerCalenderId;    				/*Issuer Calender Id - Unsigned 32 bit Integer*/
    uint8_t   dayId;                            /* Unsigned 8 bit Integer*/
	uint8_t	  totalNoOfScheduleEntries;			/* Unsigned 8 bit Integer*/
	uint8_t   totalnoOfCommands;                /* Unsigned 8 bit Integer*/
	dayScheduleEntries_t schedules[1];
}__attribute__((__packed__))publishDayProfile_t;
/*---------------------------------------------------------------------------*/
typedef struct publishWeekProfile_Tag
{
  	uint32_t  issuerEventId;
    uint32_t  issuerCalenderId;    	/*Issuer Calender Id - Unsigned 32 bit Integer*/
    uint8_t   weekId;                 /* Unsigned 8 bit Integer*/
    uint8_t   dayIdRefMonday;          /* Unsigned 8 bit Integer*/
    uint8_t   dayIdRefTueday;          /* Unsigned 8 bit Integer*/
    uint8_t   dayIdRefWedday;          /* Unsigned 8 bit Integer*/
    uint8_t   dayIdRefThursday;         /* Unsigned 8 bit Integer*/
    uint8_t   dayIdRefFriday;           /* Unsigned 8 bit Integer*/
    uint8_t   dayIdRefSatday;           /* Unsigned 8 bit Integer*/
    uint8_t   dayIdRefSunay;            /* Unsigned 8 bit Integer*/

}__attribute__((__packed__))publishWeekProfile_t;

/*---------------------------------------------------------------------------*/

typedef struct seriesOfseasonsEntry_Tag {
	uint32_t seasonsStartDate;
	uint8_t  weekIdReference;
}__attribute__((__packed__))seriesOfseasonsEntry_t;

typedef struct publishSeasonsInfo_Tag
{
  	uint32_t  issuerEventId;
    uint32_t  issuerCalenderId;    		/*Issuer Calender Id - Unsigned 32 bit Integer*/
	uint8_t   totalnoOfCommands;                /* Unsigned 8 bit Integer*/
    seriesOfseasonsEntry_t seasonsEntry;

}__attribute__((__packed__))publishSeasonsInfo_t;
/*---------------------------------------------------------------------------*/
typedef struct seriesOfSpecialDays_Tag {
	uint32_t specialDayDate;
	uint8_t  dayIdReference;
}__attribute__((__packed__))seriesOfSpecialDays_t;

typedef struct publishSpecialDays_Tag
{
	uint32_t  providerId;
    uint32_t  issuerEventId;
    uint32_t  issuerCalenderId;    /*Issuer Calender Id - Unsigned 32 bit Integer*/
    uint32_t  startTime;          /*UTC Time - Unsigned 32 bit Integer*/
	uint8_t	  calenderType;			/* Unsigned 8 bit Integer*/
    uint8_t   noOfSpecialDays;
	uint8_t   totalnoOfCommands;                /* Unsigned 8 bit Integer*/
	seriesOfSpecialDays_t specialDays;
}__attribute__((__packed__))publishSpecialDays_t;

/*---------------------------------------------------------------------------*/
/* structure of TOU Calender Cluster Atrributes 							 */
/*---------------------------------------------------------------------------*/


#if ( g_TOU_CALENDER_SERVER_CLUSTER_ENABLE_d == 1 )
typedef struct TOUClusterAttribute_Tag
{  	
#if ( g_AUX_SWITCH_1_ATTRIBUTE_ENABLE_d== 1 )
	uint8_t tier1PriceLabel[g_LENGTH_FOR_OCTET_STRING_DATA_TYPE_c];
#endif	
#if ( g_AUX_SWITCH_2_ATTRIBUTE_ENABLE_d== 1 )
	uint8_t tier2PriceLabel[g_LENGTH_FOR_OCTET_STRING_DATA_TYPE_c];
#endif	
	
}__attribute__((__packed__))TOUClusterAttribute_t;
#endif	 		/* g_TOU_CALENDER_SERVER_CLUSTER_ENABLE_d*/
/*---------------------------------------------------------------------------*/
/*   Function Prototypes                                                     */
/*---------------------------------------------------------------------------*/



/*-----------------------------------------------------------------------------
* ZCL_Handle_TOU_Calender_Cluster_Cmd
*------------------------------------------------------------------------------
*
* Return Value : Length
*		
* Input Parameters:
*	endPointId - Device End point
*   asduLength - Length of received asdu
*   pReceivedAsdu - Pointer to received asdu
*   pZCLClusterInfo - Pointer to Level control cluster info
*   pAttrsDataBaseLocation - Pointer to Basic cluster attributes storage
*
* Output Parameters:
*	pResponseLocation - Pointer for response creation
*   pActionHandler - Pointer for event updation
*
* Scope of the function: This function is called from out side the file
*
* Purpose of the function:
*	This function handles the TOU Calender cluster command received in the indication
*     	
* Before the function is called:
*   None
* After the function is called:
*   None
*
*----------------------------------------------------------------------------*/
uint8_t ZCL_Handle_TOU_Calender_Cluster_Cmd (  uint8_t endPointId,
                                        uint8_t asduLength,
                                        uint8_t* pReceivedAsdu,
                                        uint8_t* pResponseLocation,
                                        ZCL_ActionHandler_t *pActionHandler,
                                        ZCL_Cluster_Info_t const *pZCLClusterInfo,
                                        uint8_t * pAttrsDataBaseLocation );

/*----------------------------------------------------------------------------*/

#endif         /* g_TOU_CALENDER_CLUSTER_ENABLE_d*/

/*-----------------------------------------------------------------------------
* End Of File
*----------------------------------------------------------------------------*/
#endif                                      /*_ZCL_DRLC_CLUSTER_H_*/
