/******************************************************************************
* ZCL_Generic_Tunnel_Cluster.h
******************************************************************************
* Program Description:
* This file contains the ZCL_Generic_Tunnel_Cluster.h attribute and cmmnd
* information
******************************************************************************/
#ifndef _ZCL_GENERIC_TUNNEL_CLUSTER_H_
#define _ZCL_GENERIC_TUNNEL_CLUSTER_H_

#if (g_GENERIC_TUNNEL_CLUSTER_ENABLE_d == 1)
/*-----------------------------------------------------------------------------
* Includes
*----------------------------------------------------------------------------*/

/*-----------------------------------------------------------------------------
* Global Constants
*----------------------------------------------------------------------------*/

/* Generic Tunnel cluster */
#define g_GENERIC_TUNNEL_CLUSTER_c                               0x0600


/* Attributes for Generic Tunnel Server Cluster */
#if ( g_GENERIC_TUNNEL_SERVER_CLUSTER_ENABLE_d == 1 )

#define g_MAXIMUM_INCOMING_TRANSFER_SIZE_ATTRIBUTE_c             0x0001
#define g_MAXIMUM_OUTGOING_TRANSFER_SIZE_ATTRIBUTE_c             0x0002
#define g_PROTOCOL_ADDRESS_ATTRIBUTE_c                  		 0x0003

#endif

/*-----------------------------------------------------------------------------
* Memory Declarations
*----------------------------------------------------------------------------*/
#if ( g_GENERIC_TUNNEL_SERVER_CLUSTER_ENABLE_d == 1 )
extern const ZCL_Cluster_Info_t ga_Generic_Tunnel_Server_Cluster_Info;
#endif				/* g_GENERIC_TUNNEL_SERVER_CLUSTER_ENABLE_d */

#if ( g_GENERIC_TUNNEL_CLIENT_CLUSTER_ENABLE_d == 1 )
extern const ZCL_Cluster_Info_t ga_Generic_Tunnel_Client_Cluster_Info;
#endif				/* g_GENERIC_TUNNEL_CLIENT_CLUSTER_ENABLE_d */


/*Commands received by Server Side of the Generic Tunnel Cluster*/
enum GenericTunnelClusterServerGeneratedCmds
{
    g_MatchProtocolAddressCmd_c                   = 0x00
};

/*Commands  generated by Server Side of the Generic Tunnel Cluster*/
enum GenericTunnelClusterServerReceivedCmds
{
    g_MatchProtocolAddressResponseCmd_c           = 0x00,
    g_AdvertiseProtocolAddressCmd_c               = 0x01
};

/*Events handled by the application*/
enum GenericTunnelClusterEvents
{
    g_MatchProtocolAddressEvent_c            		  = 0x55,
    g_MatchProtocolAddressResponseEvent_c             = 0x56,
    g_AdvertiseProtocolAddressEvent_c                 = 0x57
};

/*-----------------------------------------------------------------------------
* Type Definitions
*----------------------------------------------------------------------------*/

/*-----------------------------------------------------------------------------
Generic Tunnel cluster structure - attributes
-----------------------------------------------------------------------------*/
typedef struct GenericTunnelClusterAttribute_Tag
{
	uint8_t Maximum_Incoming_Transfer_Size[2];
	uint8_t Maximum_Outgoing_Transfer_Size[2];
	uint8_t g_Protocol_Address_size[255];
}__attribute__((__packed__))GenericTunnelClusterAttribute_t;

/* Generic Tunnel Cluster command structure */
typedef struct MatchProtocolAddress_tag
{
	uint8_t ProtocolAddress[255];
}__attribute__((__packed__))MatchProtocolAddress_t;

typedef struct MatchProtocolAddressResponse_tag
{
	uint8_t DeviceIEEEAddress[8];
    uint8_t ProtocolAddress[255];
}__attribute__((__packed__))MatchProtocolAddressResponse_t;

typedef struct AdvertiseProtocolAddress_tag
{
	uint8_t ProtocolAddress[255];
}__attribute__((__packed__))AdvertiseProtocolAddress_t;

/*---------------------------------------------------------------------------*/
/* Function Prototypes                                                       */
/*---------------------------------------------------------------------------*/

uint8_t ZCL_Handle_Generic_Tunnel_Cluster_Cmd (  uint8_t endPointId,
                                        uint8_t asduLength,
                                        uint8_t* pReceivedAsdu,
                                        uint8_t* pResponseLocation,
                                        ZCL_ActionHandler_t *pActionHandler,
                                        ZCL_Cluster_Info_t const *pZCLClusterInfo,
                                        uint8_t * pAttrsDataBaseLocation );

#endif /*g_GENERIC_TUNNEL_CLUSTER_ENABLE_d */
/*-----------------------------------------------------------------------------
* End Of File
*------------------------------------------------------------------------------*/
#endif  /* _ZCL_GENERIC_TUNNEL_CLUSTER_H_ */
