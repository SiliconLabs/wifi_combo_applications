TRUE = 1
FALSE = 0


message = 'This example demonstrates WLAN Station functionality to run TCP Server or UDP Server or ICMP ping to the target IP address'
messagebox message ''

send '|'
wait 'U'
sendln 'U'
mpause 200
sendln '1'
wait 'Loading Done'
message = 'Firmware Loading Done Successfully' 
messagebox message ''

sendln 'at+rsi_opermode=0,2,2147485956,0,0,0,65536' 
wait 'OK' 'ERROR'
if result == 2 then
    goto error
else 
    messagebox 'Opermode Successful' ''
endif

inputbox 'Enter the band 0. 2.4GHz 1. 5GHz' 'BAND' 
BAND = inputstr

sendln 'at+rsi_band='BAND
wait 'OK' 'ERROR'
if result == 2 then
    goto error
else 
    messagebox 'Band Successful' ''
endif

sendln 'at+rsi_init'
setdebug 2     ; output is in binary, so best to display in hex format
wait '4F 4B' '45 52' ; 'OK' or 'ER'
setdebug 0
if result == 2 then
    goto error
else 
    messagebox 'Init Successful' ''
endif

inputbox 'Enter SSID to scan:' 'SSID' 
SSID = inputstr

attempts = 5
:scan_again
sendln 'at+rsi_scan=0,'SSID
mpause 1000
wait 'OK' 'ERROR'
if result == 2 then
    if attempts > 0 then
        attempts = attempts - 1
        goto scan_again
    else
        message = "Could not find "
        strconcat message SSID
        messagebox message "AP Not Found"
        goto error
    endif
else 
    messagebox 'Scan Successful' ''
endif

inputbox 'Enter PSK' 'PSK' 
PSK = inputstr

strlen PSK 
;messagebox result ''
int2str valstr result 
;messagebox valstr "str"
sendln 'at+rsi_PSK=4,'valstr','PSK
wait 'OK' 'ERROR'
if result == 2 then
    goto error
endif

sendln 'at+rsi_join='SSID',0,2,6' ; Note: This only works for WPA2
wait 'OKC' 'ERROR'
if result == 2 then
    goto error
else 
    messagebox 'Join Successful' ''
endif

; Request IP via DHCP.  Extract the IP address to present to user
sendln 'at+rsi_ipconf=1,0,0,0'
setdebug 2     ; output is in binary, so best to display in hex format
waitregex '4F 4B .{18}(\h{2}) (\h{2}) (\h{2}) (\h{2})' '45 52' ; 'OK' or 'ER'
setdebug 0
if result == 2 then
    goto error
else 
    messagebox 'Ipconfig Successful' ''
endif

inputbox 'Choose an option 1. TCP Server 2. UDP Server 3. ICMP Ping' 'PROTOCOL' 
PROTOCOL = inputstr

str2int value PROTOCOL

if value == 1 then

strdim address_str 4

; Add '$' so str2int will recognize these as hex values
for i 0 3
    address_str[i] = '$'
next

strconcat address_str[0] groupmatchstr1
strconcat address_str[1] groupmatchstr2
strconcat address_str[2] groupmatchstr3
strconcat address_str[3] groupmatchstr4
 
intdim address_int 4

; convert hex strings to decimal ints
for i 0 3
    str2int address_int[i] address_str[i]
next

; convert decimal ints to decimal strings
sprintf '%d.%d.%d.%d' address_int[0] address_int[1] address_int[2] address_int[3]
address = inputstr


pause 2
sendln 'at+rsi_ltcp=5001'
wait 'OK' 'ERROR'
if result == 2 then
    goto error
endif

message = 'Device is now listening for TCP Connections on address '
strconcat message address
strconcat message ' port 5001'
messagebox message 'SUCCESS'
goto endscript

:error 
messagebox 'An error occurred, Please check your configuration and try again' 'ERROR'


elseif value == 2 then
strdim address_str 4

; Add '$' so str2int will recognize these as hex values
for i 0 3
    address_str[i] = '$'
next

strconcat address_str[0] groupmatchstr1
strconcat address_str[1] groupmatchstr2
strconcat address_str[2] groupmatchstr3
strconcat address_str[3] groupmatchstr4
 
intdim address_int 4

; convert hex strings to decimal ints
for i 0 3
    str2int address_int[i] address_str[i]
next

; convert decimal ints to decimal strings
sprintf '%d.%d.%d.%d' address_int[0] address_int[1] address_int[2] address_int[3]
address = inputstr


pause 2
sendln 'at+rsi_ludp=5005'
wait 'OK' 'ERROR'
if result == 2 then
    goto error
endif

message = 'Device is now listening for UDP Connections on address '
strconcat message address
strconcat message ' port 5005'
messagebox message 'SUCCESS'
goto endscript

elseif value == 3 then
;FOR PING
pause 2
inputbox ' Choose an option 0 - Ping using IP address 1- Ping using domain name' 'option'
option = inputstr
str2int value1 option

if value1 == 0 then
strdim address_str 4

; Add '$' so str2int will recognize these as hex values
for i 0 3
    address_str[i] = '$'
next

strconcat address_str[0] groupmatchstr1
strconcat address_str[1] groupmatchstr2
strconcat address_str[2] groupmatchstr3
strconcat address_str[3] groupmatchstr4
 
intdim address_int 4

; convert hex strings to decimal ints
for i 0 3
    str2int address_int[i] address_str[i]
next

; convert decimal ints to decimal strings
sprintf '%d.%d.%d.%d' address_int[0] address_int[1] address_int[2] address_int[3]
IP_address = inputstr

inputbox 'Enter the IP version(length is 2 bytes)' 'IP_version'
IP_version = inputstr

inputbox 'Enter the PING address(length is 16 bytes)' 'IP_address'
IP_address = inputstr

inputbox 'Enter the PING size(length is 2 bytes)' 'Ping_size'
Ping_size = inputstr

inputbox 'Enter the timeout in ms(length is 2 bytes)' 'val'
val = inputstr

sendln 'at+rsi_ping='IP_version','IP_address','Ping_size','val' ' 
setdebug 2     ; output is in binary, so best to display in hex format
waitregex '4F 4B .{18}(\h{2}) (\h{2}) (\h{2}) (\h{2})' '45 52' ; 'OK' or 'ER'
setdebug 0
if result == 2 then
    goto error
endif

message = 'Ping successful  ' 
strconcat message IP_address
messagebox message 'SUCCESS'
goto endscript
endif


if value1 == 1 then
        
inputbox 'Enter the Domain name' 'DNS'
DNS = inputstr

sendln 'at+rsi_dnsget='DNS',1' 
;mpause 1000
setdebug 2     ; output is in binary, so best to display in hex format
waitregex '4F 4B .{18}(\h{2}) (\h{2}) (\h{2}) (\h{2})' '45 52' ; 'OK' or 'ER'
setdebug 0
if result == 2 then
    goto error
else 
    messagebox 'DNS GET Successful' ''
endif

        int2str s result
        strremove inputstr 1 18  
        
        strcopy inputstr 1 2 g1
        strcopy inputstr 4 2 g2
        strcopy inputstr 7 2 g3
        strcopy inputstr 10 2 g4



        strdim address_stri 4

        ; Add '$' so str2int will recognize these as hex values
        for i 0 3
          address_stri[i] = '$'
        next

        strconcat address_stri[0] g1
        strconcat address_stri[1] g2
        strconcat address_stri[2] g3
        strconcat address_stri[3] g4
             
        intdim address_intg 4
        ; convert hex strings to decimal ints
        for i 0 3
            str2int address_intg[i] address_stri[i]
        next

        ; convert decimal ints to decimal strings
        sprintf '%d.%d.%d.%d' address_intg[0] address_intg[1] address_intg[2] address_intg[3]
        addre = inputstr

       inputbox 'Enter the IP version(length is 2 bytes)' 'IP_version'
       IP_version = inputstr

       inputbox 'Enter the PING size(length is 2 bytes)' 'Ping_size'
       Ping_size = inputstr

       inputbox 'Enter the timeout in ms(length is 2 bytes)' 'val'
       val = inputstr

            

sendln 'at+rsi_ping='IP_version','addre','Ping_size','val' '
setdebug 2     ; output is in binary, so best to display in hex format
waitregex '4F 4B .{18}(\h{2}) (\h{2}) (\h{2}) (\h{2})' '45 52' ; 'OK' or 'ER'
setdebug 0
if result == 2 then
    goto error
endif

message = 'Ping successful  ' 
strconcat message addre
messagebox message 'SUCCESS'
goto endscript
endif


endif



:endscript
end